{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE } from './types'; //get current user's profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5005/api/profile/me');\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // // console.log(err);\n    // console.log(\"no profile\");\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('http://localhost:5005/api/profile');\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    // // console.log(err);\n    // console.log(\"no profile\");\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:5005/api/profile/user/${userId}`);\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err);\n    console.log(\"no profile\");\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:5005/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5005/api/profile');\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; //Add experience\n\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('http://localhost:5005/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add education\n\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('http://localhost:5005/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5005/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5005/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  try {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n      await axios.delete(`http://localhost:5005/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanently deleted'));\n    }\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Anmol/Desktop/Project_01/DevConnector/client/src/actions/profile.js"],"names":["axios","setAlert","ACCOUNT_DELETED","CLEAR_PROFILE","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","console","log","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","navigate","edit","errors","forEach","error","addExperience","config","headers","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE,\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  PROFILE_ERROR,\n  UPDATE_PROFILE\n} from './types';\n\n//get current user's profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('http://localhost:5005/api/profile/me');\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    // // console.log(err);\n    // console.log(\"no profile\");\n    dispatch({\n      type:PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    })\n  }\n}\n\n//Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE })\n  try {\n    const res = await axios.get('http://localhost:5005/api/profile');\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    // // console.log(err);\n    // console.log(\"no profile\");\n    dispatch({\n      type:PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    })\n  }\n}\n\n//Get profile by id\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`http://localhost:5005/api/profile/user/${userId}`);\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    // console.log(err);\n    console.log(\"no profile\");\n    dispatch({\n      type:PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    })\n  }\n}\n\n// Get Github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `http://localhost:5005/api/profile/github/${username}`\n    );\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile =\n  (formData, navigate, edit = false) =>\n  async (dispatch) => {\n    try {\n      const res = await axios.get('http://localhost:5005/api/profile');\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n//Add experience\nexport const addExperience = (formData, navigate) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put(\n      'http://localhost:5005/api/profile/experience',\n      formData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add education\nexport const addEducation = (formData, navigate) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put(\n      'http://localhost:5005/api/profile/education',\n      formData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete Experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(\n      `http://localhost:5005/api/profile/experience/${id}`\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(\n      `http://localhost:5005/api/profile/education/${id}`\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete account and profile\nexport const deleteAccount = () => async (dispatch) => {\n  try {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n      await axios.delete(`http://localhost:5005/api/profile`);\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n      dispatch(setAlert('Your account has been permanently deleted'));\n    }\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}