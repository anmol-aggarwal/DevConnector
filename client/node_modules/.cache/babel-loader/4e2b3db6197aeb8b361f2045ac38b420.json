{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; //get current user's profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5005/api/profile/me');\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // // console.log(err);\n    // console.log(\"no profile\");\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5005/api/profile');\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; //Add experience\n\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('http://localhost:5005/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add education\n\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('http://localhost:5005/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Anmol/Desktop/Project_01/DevConnector/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","console","log","type","payload","data","err","msg","response","statusText","status","createProfile","formData","navigate","edit","errors","forEach","error","addExperience","config","headers","put","addEducation"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE\n} from './types';\n\n//get current user's profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('http://localhost:5005/api/profile/me');\n    console.log(\"profile\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    // // console.log(err);\n    // console.log(\"no profile\");\n    dispatch({\n      type:PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    })\n  }\n}\n\n// Create or update profile\nexport const createProfile =\n  (formData, navigate, edit = false) =>\n  async (dispatch) => {\n    try {\n      const res = await axios.get('http://localhost:5005/api/profile');\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n//Add experience\nexport const addExperience = (formData, navigate) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put(\n      'http://localhost:5005/api/profile/experience',\n      formData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add education\nexport const addEducation = (formData, navigate) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put(\n      'http://localhost:5005/api/profile/education',\n      formData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}